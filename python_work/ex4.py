#! /usr/bin/env python
# -*- coding: utf-8 -*-

#4-3  Считаем до 20: используйте цикл for для вывода чисел от 1 до 20 включительно 

for value in range(1,21):
	print(value)

#4-4  Миллион: создайте список чисел от 1 до 1 000 000, затем воспользуйтесь циклом for для вывода чисел  
#     (Если вывод занимает слишком много времени, остановите его нажатием Ctrl+C или закройте окно вывода )

values = list(range(1,1000001))
#Очень долго выводит все числа
#print(values)
print(len(values))

#4-5  Суммирование миллиона чисел: создайте список чисел от 1 до 1 000 000, затем вос- пользуйтесь функциями min() и max() и 
#     убедитесь в том, что список действительно начи- нается с 1 и заканчивается 1 000 000  
#     Вызовите функцию sum() и посмотрите, насколько быстро Python сможет просуммировать миллион чисел 
values = list(range(1,1000001))
print(min(values))
print(max(values))
print(sum(values))

#4-6  Нечетные числа: воспользуйтесь третьим аргументом функции range() для создания списка нечетных чисел от 1 до 20  
#     Выведите все числа в цикле for 
for value in range(1,20,2):
	print(value)

#4-7  Тройки: создайте список чисел, кратных 3, в диапазоне от 3 до 30  Выведите все числа своего списка в цикле for
print("ex 4-7")
for value in range(3,30,3):
	print(value)

#4-8  Кубы: результат возведения числа в третью степень называется кубом  
#	  Например, куб 2 записывается в языке Python в виде 2**3  Создайте список первых 10 кубов 
#     (то есть кубов всех целых чисел от 1 до 10) и выведите значения всех кубов в цикле for 
print("------ ex 4-8")
coubs = []
for values in range(1,10):
	coubs.append(values**3)
print(coubs)

#4-9  Генератор кубов: используйте конструкцию генератора списка для создания списка первых 10 куб
print("------ ex 4-9")
coubs = [value**3 for value in range(1,10)]
print(coubs)